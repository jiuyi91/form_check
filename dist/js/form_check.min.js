!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(n,s,function(t){return e[t]}.bind(null,s));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){var n,s,i;!function(r,a){let o=a(r);t&&"string"!=typeof t.nodeName?e.exports=o:(s=[t],void 0===(i="function"==typeof(n=o)?n.apply(t,s):n)||(e.exports=i)),r.form_check=o}(this,(function(e,t){"use strict";let r=window,n=document,s=e=>{if("string"==typeof e&&(e=n.querySelector(e)),e&&e.tagName)return e;console.error("form_check:请检查你传入的元素是否正确。")},i={},a={},o=(e,t)=>{a[e]?console.error(e+"校验的名字已用过，请重新取一个名，已有的可在“yi_public.form_check._check_list”中查到"):a[e]=t},l={notice:e=>{e.tips.classList.remove("error_tips"),e.tips.classList.remove("warn_tips"),e.rev?e.tips.innerHTML="":(e.tips.innerHTML=e.msg||"","blur"===e.type&&e.tips.classList.add("error_tips"),"focus"===e.type&&e.tips.classList.add("warn_tips"))},content:e=>{if(e.target=s(e.target),e.tips=e.tips&&s(e.tips),e.tips||(e.tips=n.createElement("span"),((e,t)=>{let r=t.parentNode;r.lastChild==t?r.appendChild(e):r.insertBefore(e,t.nextSibling)})(e.tips,e.target)),e.tips.classList.add("input_tips"),e.target.__form_check__content)return void console.error("此元素不能绑两次校验",e.target);e.target.__form_check__content=!0;let t=()=>{let t=e.target.value||"",r=a[e.check]({val:t,check:a});return l.notice({target:e.target,tips:e.tips,msg:r.MSG,rev:r.REV,type:"blur"}),r.REV},r=e.form_name||"0";i[r]=i[r]||[],i[r].push({_fn:t,_obj:e}),e.target.addEventListener("blur",t,!1),e.target.addEventListener("focus",()=>{l.notice({target:e.target,tips:e.tips,msg:e.entry,rev:!e.entry,type:"focus"})},!1)},check:e=>{e.tips=e.tips&&s(e.tips);let t=a[e.check]({val:e.val,check:a});return e.tips&&l.notice({tips:e.tips,msg:t.MSG,rev:t.REV,type:"blur"}),t.REV},must:e=>{let t,r=!0,n=!0,s=i[e||"0"]||[];for(let e=0;e<s.length;e++){let i=s[e]._fn();s[e]._obj.required&&(t=!0,i||(n=i)),i||(r=i)}return t?n:r},set_check:o,_check_list:a};return o("is_empty",e=>{let t=e.val,r="",n=!0;return""!=t&&null!=t||(n=!1,r="不能为空"),{REV:n,MSG:r}}),o("is_email",e=>{let t=e.val,r=e.check.is_empty(e),n=r.REV,s=r.MSG;return n&&!/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(t)&&(n=!1,s="请输入正确的邮箱"),{REV:n,MSG:s}}),o("phone",e=>{let t=e.val.replace(/(^\s*)|(\s*$)/g,""),r=e.check.is_empty(e),n=r.REV,s=r.MSG;return n&&!/^(1)[3|4|5|6|7|8|9]\d{9}$/.test(t)&&(n=!1,s="请输入正确的手机号"),{REV:n,MSG:s}}),o("real_name",e=>{let t=e.val,r=e.check.is_empty(e),n=r.REV,s=r.MSG;return n&&!/^\s*[\u4e00-\u9fa5]{1,}[\u4e00-\u9fa5.?]{0,15}[\u4e00-\u9fa5]{1,}\s*$/.test(t)||t.length>20?(n=!1,s="请输入正确真实姓名"):t.indexOf(" ")>-1&&(n=!1,s="不能有空格"),{REV:n,MSG:s}}),o("address",e=>{let t,r=e.val,n=e.check.is_empty(e),s=n.REV,i=n.MSG;return s&&/[^\a-\z\A-\Z0-9\u4E00-\u9FA5\ ]/g.test(r)&&(t=r.match(/[^\a-\z\A-\Z0-9\u4E00-\u9FA5\ ]/g)||[],s=!1,i="不得含有("+t.join(" ")+")"),{REV:s,MSG:i}}),o("id_card",e=>{let t=e.val,r=t.length,n=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2,1],s=[1,0,10,9,8,7,6,5,4,3,2],i=0,a=e.check.is_empty(e),o=a.REV,l=a.MSG;var c,u,p,f;return o&&(o&&15==r?(c=t.substring(6,8),u=t.substring(8,10),p=t.substring(10,12),((f=new Date(c,parseFloat(u)-1,parseFloat(p))).getYear()!=parseFloat(c)||f.getMonth()!=parseFloat(u)-1||f.getDate()!=parseFloat(p))&&(o=!1,l="请输入正确身份证号码")):o&&18==r&&function(){var t=0,r=e.val.split("");"x"==r[17].toLowerCase()&&(r[17]=10);for(var a=0;a<17;a++)t+=n[a]*r[a];return i=t%11,r[17]==s[i]}()&&function(){var e=t.substring(6,10),r=t.substring(10,12),n=t.substring(12,14),s=new Date(e,parseFloat(r)-1,parseFloat(n));return s.getFullYear()==parseFloat(e)&&s.getMonth()==parseFloat(r)-1&&s.getDate()==parseFloat(n)}()||(o=!1,l="请输入正确身份证号码")),{REV:o,MSG:l}}),r.yi_public=r.yi_public||{},r.yi_public.form_check=l,l}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Zvcm1fY2hlY2suanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJnbG9iYWwiLCJmYWN0b3J5IiwiZm9ybV9jaGVjayIsIm5vZGVOYW1lIiwidGhpcyIsInVuZGVmaW5lZCIsIl93aW4iLCJ3aW5kb3ciLCJfZG9jIiwiZG9jdW1lbnQiLCJnZXRfZG9tIiwiZG9tIiwicXVlcnlTZWxlY3RvciIsInRhZ05hbWUiLCJjb25zb2xlIiwiZXJyb3IiLCJmb3JtX2xpc3QiLCJfY2hlY2tfbGlzdCIsIl9zZXRfY2hlY2siLCJjaGVja19mbiIsIm5vdGljZSIsIm9iaiIsInRpcHMiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJyZXYiLCJpbm5lckhUTUwiLCJtc2ciLCJ0eXBlIiwiYWRkIiwiY29udGVudCIsInRhcmdldCIsImNyZWF0ZUVsZW1lbnQiLCJuZXdfZWwiLCJwYXJlbnQiLCJwYXJlbnROb2RlIiwibGFzdENoaWxkIiwiYXBwZW5kQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJuZXh0U2libGluZyIsImluc2VydF9hZnRlciIsIl9fZm9ybV9jaGVja19fY29udGVudCIsImJsdXJfZm4iLCJ2YWwiLCJyZXN1bHQiLCJjaGVjayIsIk1TRyIsIlJFViIsIl9mb3JtX25hbWUiLCJmb3JtX25hbWUiLCJwdXNoIiwiX2ZuIiwiX29iaiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlbnRyeSIsIm11c3QiLCJzdHIiLCJyZXF1aXJlZCIsInJlcXVpcmVkX3JldiIsInRhcmdldF9saXN0IiwibGVuZ3RoIiwiZiIsInNldF9jaGVjayIsIm51bSIsIm5vdF9lbXB0eSIsImlzX2VtcHR5IiwidGVzdCIsInJlcGxhY2UiLCJpbmRleE9mIiwiX21zZ19hcnIiLCJtYXRjaCIsImpvaW4iLCJsZW4iLCJ3aSIsInZhbGlkZV9jb2RlIiwidmFsX2NvZGUiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJ0ZW1wX2RhdGUiLCJzdWJzdHJpbmciLCJEYXRlIiwicGFyc2VGbG9hdCIsImdldFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJzdW0iLCJzcGxpdCIsInRvTG93ZXJDYXNlIiwibGVuXzE4IiwiZ2V0RnVsbFllYXIiLCJsZW5fMThfYmlydGhkYXkiLCJ5aV9wdWJsaWMiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEw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LEVBQUUsSUFDeEJGLEVBQU1mLEVBQUlpQixVQUFVLEdBQUcsTUFDdkJELEVBQVksSUFBSUUsS0FBTUwsRUFBTU0sV0FBV0wsR0FBUyxFQUFHSyxXQUFXSixLQUNyREssV0FBYUQsV0FBV04sSUFBU0csRUFBVUssWUFBY0YsV0FBV0wsR0FBTyxHQUFLRSxFQUFVTSxXQUFhSCxXQUFXSixNQXFDL0hyRCxHQUFNLEVBQ05FLEVBcERNLGVBc0RMRixHQUFjLElBQVArQyxHQWxDSCxXQUNMLElBQUljLEVBQU0sRUFDTnZCLEVBQU0xQyxFQUFJc0IsSUFBSTRDLE1BQU0sSUFDSyxLQUF6QnhCLEVBQUksSUFBSXlCLGdCQUNSekIsRUFBSSxJQUFNLElBRWQsSUFBSyxJQUFJL0YsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3BCc0gsR0FBT2IsRUFBR3pHLEdBQUsrRixFQUFJL0YsR0FHdkIsT0FEQTJHLEVBQVdXLEVBQU0sR0FDYnZCLEVBQUksS0FBT1csRUFBWUMsR0F5QjFCYyxJQW5CYSxXQUNkLElBQUliLEVBQVFiLEVBQUlpQixVQUFVLEVBQUUsSUFDeEJILEVBQVFkLEVBQUlpQixVQUFVLEdBQUcsSUFDekJGLEVBQU1mLEVBQUlpQixVQUFVLEdBQUcsSUFDdkJELEVBQVksSUFBSUUsS0FBS0wsRUFBTU0sV0FBV0wsR0FBUyxFQUFHSyxXQUFXSixJQUNqRSxPQUFHQyxFQUFVVyxlQUFpQlIsV0FBV04sSUFBU0csRUFBVUssWUFBY0YsV0FBV0wsR0FBUyxHQUFLRSxFQUFVTSxXQUFhSCxXQUFXSixHQWN4SGEsS0FLakJsRSxHQUFPLEVBQ1BFLEVBN0RVLGVBK0RSLENBQ0ZvQixJQUFLdEIsRUFDTHFCLElBQUtuQixLQUlickIsRUFBS3NGLFVBQVl0RixFQUFLc0YsV0FBYSxHQUNuQ3RGLEVBQUtzRixVQUFVMUYsV0FBYUEsRUFDckJBIiwiZmlsZSI6ImZvcm1fY2hlY2subWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiLyoqXG4gKiB5aXpxIDIwMjAvMDYvMjkuIOaVtOeQhuS7peWJjeeahOS7o+eggeS6m+mhueebruWBmuS6huWkp+amgjMw5Liq57G75aSn5Z6L5rS75Yqo77yM5Zyo5q2k5LiK5YGa5LqM5qyh5byA5Y+RLOatpOmhueebruesrOS4gOasoeeUqOaYrzIwMTblubQy5pyIXG4gKlxuICovXG47KGZ1bmN0aW9uIGRlZmluZWxheWVyKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgIGxldCBmb3JtX2NoZWNrID0gZmFjdG9yeShnbG9iYWwpO1xuICAgIC8v57uZ57G75rOo5YWl5Yiwd2luZG935LiK77yM5pa55L6/5Lia5Yqh5LqM5qyh6LCD55SoXG4gICAgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiAgZXhwb3J0cyAmJiB0eXBlb2YgZXhwb3J0cy5ub2RlTmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gQ29tbW9uSlNcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmb3JtX2NoZWNrOyAgICAgICAgXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgLy9BTURcbiAgICAgICAgZGVmaW5lKFsnZXhwb3J0cyddLCBmb3JtX2NoZWNrKTsgICAgXG4gICAgfVxuICAgIFxuICAgIGdsb2JhbC5mb3JtX2NoZWNrID0gZm9ybV9jaGVjaztcblxufSkodGhpcywgZnVuY3Rpb24gKGdsb2JhbCwgdW5kZWZpbmVkKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgIC8v5aSa5qyh6LCD55So5pe255qE5YWx5pyJ5pa55rOVXG4gICAgbGV0IF93aW4gPSB3aW5kb3csXG4gICAgICAgIF9kb2MgPSBkb2N1bWVudDtcblxuICAgIGxldCBnZXRfZG9tID0gKGRvbSkgPT4ge1xuICAgICAgICBpZih0eXBlb2YgZG9tID09PSAnc3RyaW5nJyl7XG4gICAgICAgICAgICBkb20gPSBfZG9jLnF1ZXJ5U2VsZWN0b3IoZG9tKTtcbiAgICAgICAgfVxuICAgICAgICBpZihkb20gJiYgZG9tLnRhZ05hbWUpe1xuICAgICAgICAgICAgcmV0dXJuIGRvbTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdmb3JtX2NoZWNrOuivt+ajgOafpeS9oOS8oOWFpeeahOWFg+e0oOaYr+WQpuato+ehruOAgicpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgaW5zZXJ0X2FmdGVyID0gKG5ld19lbCwgdGFyZ2V0KSA9PiB7XG4gICAgICAgIGxldCBwYXJlbnQgPSB0YXJnZXQucGFyZW50Tm9kZTtcbiAgICAgICAgaWYgKHBhcmVudC5sYXN0Q2hpbGQgPT0gdGFyZ2V0KSB7XG4gICAgICAgICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQobmV3X2VsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcmVudC5pbnNlcnRCZWZvcmUobmV3X2VsLCB0YXJnZXQubmV4dFNpYmxpbmcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbGV0IGZvcm1fbGlzdCA9IHt9O1xuXG4gICAgbGV0IF9jaGVja19saXN0ID0ge307XG4gICAgbGV0IF9zZXRfY2hlY2sgPSAobmFtZSwgY2hlY2tfZm4pID0+IHtcbiAgICAgICAgaWYoIV9jaGVja19saXN0W25hbWVdKXtcbiAgICAgICAgICAgIF9jaGVja19saXN0W25hbWVdID0gY2hlY2tfZm47XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihuYW1lICsgJ+agoemqjOeahOWQjeWtl+W3sueUqOi/h++8jOivt+mHjeaWsOWPluS4gOS4quWQje+8jOW3suacieeahOWPr+WcqOKAnHlpX3B1YmxpYy5mb3JtX2NoZWNrLl9jaGVja19saXN04oCd5Lit5p+l5YiwJylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxldCBmb3JtX2NoZWNrID0ge1xuICAgICAgICAvL+WcqOafkOWFg+e0oOmHjOi+k+WFpeaPkOekuuWGheWuuVxuICAgICAgICBub3RpY2U6IChvYmopID0+IHtcbiAgICAgICAgICAgIG9iai50aXBzLmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yX3RpcHMnKTtcbiAgICAgICAgICAgIG9iai50aXBzLmNsYXNzTGlzdC5yZW1vdmUoJ3dhcm5fdGlwcycpO1xuICAgICAgICAgICAgaWYoIW9iai5yZXYpe1xuICAgICAgICAgICAgICAgIG9iai50aXBzLmlubmVySFRNTCA9IG9iai5tc2cgfHwgJyc7XG4gICAgICAgICAgICAgICAgaWYob2JqLnR5cGUgPT09ICdibHVyJyl7XG4gICAgICAgICAgICAgICAgICAgIG9iai50aXBzLmNsYXNzTGlzdC5hZGQoJ2Vycm9yX3RpcHMnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYob2JqLnR5cGUgPT09ICdmb2N1cycpe1xuICAgICAgICAgICAgICAgICAgICBvYmoudGlwcy5jbGFzc0xpc3QuYWRkKCd3YXJuX3RpcHMnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBvYmoudGlwcy5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLy/nu5nmn5DlhYPntKDnu5HlrprmoKHpqozmlrnms5VcbiAgICAgICAgY29udGVudDogKG9iaikgPT4ge1xuICAgICAgICAgICAgb2JqLnRhcmdldCA9IGdldF9kb20ob2JqLnRhcmdldCk7XG4gICAgICAgICAgICBvYmoudGlwcyA9IG9iai50aXBzICYmIGdldF9kb20ob2JqLnRpcHMpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvL+WmguaenOayoeacieS8oOWFpeaPkOekuuWFg+e0oO+8jOWcqOWQjumdouWKoOS4gOS4quaPkOekuuWFg+e0oFxuICAgICAgICAgICAgaWYoIW9iai50aXBzKXtcbiAgICAgICAgICAgICAgICBvYmoudGlwcyA9IF9kb2MuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgIGluc2VydF9hZnRlcihvYmoudGlwcywgb2JqLnRhcmdldCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG9iai50aXBzLmNsYXNzTGlzdC5hZGQoJ2lucHV0X3RpcHMnKTtcblxuICAgICAgICAgICAgaWYob2JqLnRhcmdldC5fX2Zvcm1fY2hlY2tfX2NvbnRlbnQpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+atpOWFg+e0oOS4jeiDvee7keS4pOasoeagoemqjCcsIG9iai50YXJnZXQpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb2JqLnRhcmdldC5fX2Zvcm1fY2hlY2tfX2NvbnRlbnQgPSB0cnVlO1xuXG4gICAgICAgICAgICBsZXQgYmx1cl9mbiA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgdmFsID0gb2JqLnRhcmdldC52YWx1ZSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NoZWNrX2xpc3Rbb2JqLmNoZWNrXSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWw6IHZhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrOiBfY2hlY2tfbGlzdFxuICAgICAgICAgICAgICAgICAgICB9KTsvLyxcbiAgICAgICAgICAgICAgICAgICAgLy9ldiA9IGV2IHx8IF93aW4uZXZlbnQgfHwge307XG4gICAgICAgICAgICAgICAgZm9ybV9jaGVjay5ub3RpY2Uoe1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6IG9iai50YXJnZXQsXG4gICAgICAgICAgICAgICAgICAgIHRpcHM6IG9iai50aXBzLFxuICAgICAgICAgICAgICAgICAgICBtc2c6IHJlc3VsdC5NU0csXG4gICAgICAgICAgICAgICAgICAgIHJldjogcmVzdWx0LlJFVixcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2JsdXInLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuUkVWO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCBfZm9ybV9uYW1lID0gb2JqLmZvcm1fbmFtZSB8fCAnMCc7XG4gICAgICAgICAgICBmb3JtX2xpc3RbX2Zvcm1fbmFtZV0gPSBmb3JtX2xpc3RbX2Zvcm1fbmFtZV0gfHwgW11cbiAgICAgICAgICAgIGZvcm1fbGlzdFtfZm9ybV9uYW1lXS5wdXNoKHtcbiAgICAgICAgICAgICAgICBfZm46IGJsdXJfZm4sXG4gICAgICAgICAgICAgICAgX29iajogb2JqXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgb2JqLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgYmx1cl9mbiwgZmFsc2UpO1xuXG4gICAgICAgICAgICBvYmoudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGZvcm1fY2hlY2subm90aWNlKHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBvYmoudGFyZ2V0LFxuICAgICAgICAgICAgICAgICAgICB0aXBzOiBvYmoudGlwcyxcbiAgICAgICAgICAgICAgICAgICAgbXNnOiBvYmouZW50cnksXG4gICAgICAgICAgICAgICAgICAgIHJldjogb2JqLmVudHJ5ID8gZmFsc2UgOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZm9jdXMnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0sIGZhbHNlKTtcbiAgICAgICAgfSxcbiAgICAgICAgLy/lj6rmoKHpqozlhbfkvZPnmoTlgLxcbiAgICAgICAgY2hlY2s6IChvYmopID0+IHtcbiAgICAgICAgICAgIG9iai50aXBzID0gb2JqLnRpcHMgJiYgZ2V0X2RvbShvYmoudGlwcyk7XG5cbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBfY2hlY2tfbGlzdFtvYmouY2hlY2tdKHtcbiAgICAgICAgICAgICAgICB2YWw6IG9iai52YWwsXG4gICAgICAgICAgICAgICAgY2hlY2s6IF9jaGVja19saXN0XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYob2JqLnRpcHMpe1xuICAgICAgICAgICAgICAgIGZvcm1fY2hlY2subm90aWNlKHtcbiAgICAgICAgICAgICAgICAgICAgdGlwczogb2JqLnRpcHMsXG4gICAgICAgICAgICAgICAgICAgIG1zZzogcmVzdWx0Lk1TRyxcbiAgICAgICAgICAgICAgICAgICAgcmV2OiByZXN1bHQuUkVWLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnYmx1cicsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0LlJFVjtcbiAgICAgICAgfSxcbiAgICAgICAgLy/moKHpqoxjb250ZW505pa55rOV57uR5a6a55qE5YWD57Sg5piv5ZCm6YCa6L+H5qCh6aqMXG4gICAgICAgIG11c3Q6IChzdHIpID0+IHtcbiAgICAgICAgICAgIGxldCByZXYgPSB0cnVlLFxuICAgICAgICAgICAgICAgIHJlcXVpcmVkLFxuICAgICAgICAgICAgICAgIHJlcXVpcmVkX3JldiA9IHRydWUsXG4gICAgICAgICAgICAgICAgdGFyZ2V0X2xpc3QgPSBmb3JtX2xpc3RbKHN0ciB8fCAnMCcpXSB8fCBbXTtcblxuICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHRhcmdldF9saXN0Lmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBsZXQgZiA9IHRhcmdldF9saXN0W2ldLl9mbigpO1xuICAgICAgICAgICAgICAgIC8v5aaC5p6c6YWN5LqG5b+F5aGr6aG55bCx5Y+q5p+l5b+F5aGr6aG5XG4gICAgICAgICAgICAgICAgaWYodGFyZ2V0X2xpc3RbaV0uX29iai5yZXF1aXJlZCl7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYoICFmICl7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZF9yZXYgPSBmOyAvL+i/meaXtiBmID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYoICFmICl7XG4gICAgICAgICAgICAgICAgICAgIHJldiA9IGY7IC8v6L+Z5pe2IGYgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmKHJlcXVpcmVkKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWlyZWRfcmV2O1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJldjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2V0X2NoZWNrOiBfc2V0X2NoZWNrLFxuICAgICAgICBfY2hlY2tfbGlzdDogX2NoZWNrX2xpc3RcbiAgICB9XG5cbiAgICBfc2V0X2NoZWNrKCdpc19lbXB0eScsIChvYmopID0+IHtcbiAgICAgICAgbGV0IG51bSA9IG9iai52YWwsXG4gICAgICAgICAgICBtc2cgPSAnJyxcbiAgICAgICAgICAgIHJldiA9IHRydWU7XG4gICAgICAgIGlmKCBudW0gPT0gJycgfHwgbnVtID09IG51bGwgKXtcbiAgICAgICAgICAgIHJldiA9ICBmYWxzZTtcbiAgICAgICAgICAgIG1zZyA9ICfkuI3og73kuLrnqbonXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJue1xuICAgICAgICAgICAgUkVWOiByZXYsXG4gICAgICAgICAgICBNU0c6IG1zZ1xuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgX3NldF9jaGVjaygnaXNfZW1haWwnLCBvYmogPT4ge1xuICAgICAgICBsZXQgdmFsID0gb2JqLnZhbCxcbiAgICAgICAgICAgIG5vdF9lbXB0eSA9IG9iai5jaGVjay5pc19lbXB0eShvYmopLFxuICAgICAgICAgICAgcmV2ID0gbm90X2VtcHR5LlJFVixcbiAgICAgICAgICAgIG1zZyA9IG5vdF9lbXB0eS5NU0c7XG5cbiAgICAgICAgaWYocmV2ICYmICEoL14oW2EtekEtWjAtOV9cXC5cXC1dKStcXEAoKFthLXpBLVowLTlcXC1dKStcXC4pKyhbYS16QS1aMC05XXsyLDR9KSskLy50ZXN0KHZhbCkpICl7XG4gICAgICAgICAgICByZXYgPSBmYWxzZTtcbiAgICAgICAgICAgIG1zZyA9ICfor7fovpPlhaXmraPnoa7nmoTpgq7nrrEnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybntcbiAgICAgICAgICAgIFJFVjogcmV2LFxuICAgICAgICAgICAgTVNHOiBtc2dcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICBfc2V0X2NoZWNrKCdwaG9uZScsIG9iaiA9PiB7XG4gICAgICAgIGxldCBudW0gPSBvYmoudmFsLnJlcGxhY2UoLyheXFxzKil8KFxccyokKS9nLCcnKSxcbiAgICAgICAgICAgIG5vdF9lbXB0eSA9IG9iai5jaGVjay5pc19lbXB0eShvYmopLFxuICAgICAgICAgICAgcmV2ID0gbm90X2VtcHR5LlJFVixcbiAgICAgICAgICAgIG1zZyA9IG5vdF9lbXB0eS5NU0c7XG4gICAgICAgIGlmKHJldiAmJiAhL14oMSlbM3w0fDV8Nnw3fDh8OV1cXGR7OX0kLy50ZXN0KG51bSkpe1xuICAgICAgICAgICAgcmV2ID0gZmFsc2U7XG4gICAgICAgICAgICBtc2cgPSAn6K+36L6T5YWl5q2j56Gu55qE5omL5py65Y+3JztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm57XG4gICAgICAgICAgICBSRVY6IHJldixcbiAgICAgICAgICAgIE1TRzogbXNnXG4gICAgICAgIH07XG4gICAgfSk7XG5cblxuICAgIC8v6aqM6K+B5aeT5ZCNXG4gICAgX3NldF9jaGVjaygncmVhbF9uYW1lJywgb2JqID0+IHtcbiAgICAgICAgbGV0IHZhbCA9IG9iai52YWwsXG4gICAgICAgICAgICBub3RfZW1wdHkgPSBvYmouY2hlY2suaXNfZW1wdHkob2JqKSxcbiAgICAgICAgICAgIHJldiA9IG5vdF9lbXB0eS5SRVYsXG4gICAgICAgICAgICBtc2cgPSBub3RfZW1wdHkuTVNHO1xuICAgICAgICBpZihyZXYgJiYgIS9eXFxzKltcXHU0ZTAwLVxcdTlmYTVdezEsfVtcXHU0ZTAwLVxcdTlmYTUuP117MCwxNX1bXFx1NGUwMC1cXHU5ZmE1XXsxLH1cXHMqJC8udGVzdCh2YWwpIHx8IHZhbC5sZW5ndGggPiAyMCl7XG4gICAgICAgICAgICByZXYgPSBmYWxzZTtcbiAgICAgICAgICAgIG1zZyA9ICfor7fovpPlhaXmraPnoa7nnJ/lrp7lp5PlkI0nO1xuICAgICAgICB9ZWxzZSBpZih2YWwuaW5kZXhPZignICcpID4gLTEpe1xuICAgICAgICAgICAgcmV2ID0gZmFsc2U7XG4gICAgICAgICAgICBtc2cgPSAn5LiN6IO95pyJ56m65qC8JztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm57XG4gICAgICAgICAgICBSRVY6IHJldixcbiAgICAgICAgICAgIE1TRzogbXNnXG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvL+mqjOivgeWcsOWdgFxuICAgIF9zZXRfY2hlY2soJ2FkZHJlc3MnLCBvYmogPT4ge1xuICAgICAgICBsZXQgdmFsID0gb2JqLnZhbCxcbiAgICAgICAgICAgIG5vdF9lbXB0eSA9IG9iai5jaGVjay5pc19lbXB0eShvYmopLFxuICAgICAgICAgICAgcmV2ID0gbm90X2VtcHR5LlJFVixcbiAgICAgICAgICAgIG1zZyA9IG5vdF9lbXB0eS5NU0csXG4gICAgICAgICAgICBfbXNnX2FycjtcbiAgICAgICAgaWYocmV2ICYmIC9bXlxcYS1cXHpcXEEtXFxaMC05XFx1NEUwMC1cXHU5RkE1XFwgXS9nLnRlc3QodmFsKSl7XG4gICAgICAgICAgICBfbXNnX2FyciA9IHZhbC5tYXRjaCgvW15cXGEtXFx6XFxBLVxcWjAtOVxcdTRFMDAtXFx1OUZBNVxcIF0vZykgfHwgW107XG4gICAgICAgICAgICByZXYgPSBmYWxzZTtcbiAgICAgICAgICAgIG1zZyA9ICfkuI3lvpflkKvmnIkoJyArIF9tc2dfYXJyLmpvaW4oJyAnKSArICcpJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm57XG4gICAgICAgICAgICBSRVY6IHJldixcbiAgICAgICAgICAgIE1TRzogbXNnXG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvL+mqjOivgeWcsOWdgFxuICAgIF9zZXRfY2hlY2soJ2lkX2NhcmQnLCBvYmogPT4ge1xuICAgICAgICBsZXQgbnVtID0gb2JqLnZhbCxcbiAgICAgICAgICAgIGVycl9tc2cgPSAn6K+36L6T5YWl5q2j56Gu6Lqr5Lu96K+B5Y+356CBJyxcbiAgICAgICAgICAgIGxlbiA9IG51bS5sZW5ndGgsXG4gICAgICAgICAgICB3aSA9IFsgNywgOSwgMTAsIDUsIDgsIDQsIDIsIDEsIDYsIDMsIDcsIDksIDEwLCA1LCA4LCA0LCAyLCAxIF0sXG4gICAgICAgICAgICB2YWxpZGVfY29kZSA9IFsgMSwgMCwgMTAsIDksIDgsIDcsIDYsIDUsIDQsIDMsIDIgXSxcbiAgICAgICAgICAgIHZhbF9jb2RlID0gMCxcbiAgICAgICAgICAgIG5vdF9lbXB0eSA9IG9iai5jaGVjay5pc19lbXB0eShvYmopLFxuICAgICAgICAgICAgcmV2ID0gbm90X2VtcHR5LlJFVixcbiAgICAgICAgICAgIG1zZyA9IG5vdF9lbXB0eS5NU0csXG4gICAgICAgICAgICAvLzE15L2N5pe255qE55Sf5pel5qCh5a+5XG4gICAgICAgICAgICBsZW5fMTVfYmlydGhkYXkgPSBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIHZhciB5ZWFyID0gIG51bS5zdWJzdHJpbmcoNiw4KSxcbiAgICAgICAgICAgICAgICAgICAgbW9udGggPSBudW0uc3Vic3RyaW5nKDgsMTApLFxuICAgICAgICAgICAgICAgICAgICBkYXkgPSBudW0uc3Vic3RyaW5nKDEwLDEyKSxcbiAgICAgICAgICAgICAgICAgICAgdGVtcF9kYXRlID0gbmV3IERhdGUoIHllYXIsIHBhcnNlRmxvYXQobW9udGgpIC0gMSwgcGFyc2VGbG9hdChkYXkpICk7XG4gICAgICAgICAgICAgICAgaWYodGVtcF9kYXRlLmdldFllYXIoKSAhPSBwYXJzZUZsb2F0KHllYXIpIHx8IHRlbXBfZGF0ZS5nZXRNb250aCgpICE9IHBhcnNlRmxvYXQobW9udGgpLTEgfHwgdGVtcF9kYXRlLmdldERhdGUoKSAhPSBwYXJzZUZsb2F0KGRheSkpe1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsZW5fMTggPSBmdW5jdGlvbiAoKXtcbiAgICAgICAgICAgICAgICB2YXIgc3VtID0gMCxcbiAgICAgICAgICAgICAgICAgICAgbnVtID0gb2JqLnZhbC5zcGxpdChcIlwiKTtcbiAgICAgICAgICAgICAgICBpZiAobnVtWzE3XS50b0xvd2VyQ2FzZSgpID09ICd4Jyl7XG4gICAgICAgICAgICAgICAgICAgIG51bVsxN10gPSAxMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yKCB2YXIgaSA9IDA7IGkgPCAxNzsgaSsrKXtcbiAgICAgICAgICAgICAgICAgICAgc3VtICs9IHdpW2ldICogbnVtW2ldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWxfY29kZSA9IHN1bSAlIDExO1xuICAgICAgICAgICAgICAgIGlmIChudW1bMTddICE9IHZhbGlkZV9jb2RlW3ZhbF9jb2RlXSl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxlbl8xOF9iaXJ0aGRheSA9IGZ1bmN0aW9uICgpey8vaXNWYWxpZGl0eUJyaXRoQnkxOElkQ2FyZFxuICAgICAgICAgICAgICAgIHZhciB5ZWFyID0gIG51bS5zdWJzdHJpbmcoNiwxMCksXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoID0gbnVtLnN1YnN0cmluZygxMCwxMiksXG4gICAgICAgICAgICAgICAgICAgIGRheSA9IG51bS5zdWJzdHJpbmcoMTIsMTQpLFxuICAgICAgICAgICAgICAgICAgICB0ZW1wX2RhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBwYXJzZUZsb2F0KG1vbnRoKSAtIDEsIHBhcnNlRmxvYXQoZGF5KSk7XG4gICAgICAgICAgICAgICAgaWYodGVtcF9kYXRlLmdldEZ1bGxZZWFyKCkgIT0gcGFyc2VGbG9hdCh5ZWFyKSB8fCB0ZW1wX2RhdGUuZ2V0TW9udGgoKSAhPSBwYXJzZUZsb2F0KG1vbnRoKSAtIDEgfHwgdGVtcF9kYXRlLmdldERhdGUoKSAhPSBwYXJzZUZsb2F0KGRheSkpe1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIGlmKCFyZXYpe1xuICAgICAgICAgICAgLy9tc2cgPSBcIuivt+i+k+WFpei6q+S7veivgeWPt1wiO1xuICAgICAgICB9ZWxzZSBpZihyZXYgJiYgbGVuID09IDE1KXtcbiAgICAgICAgICAgIGlmKCFsZW5fMTVfYmlydGhkYXkoKSl7XG4gICAgICAgICAgICAgICAgcmV2ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbXNnID0gZXJyX21zZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfWVsc2UgaWYocmV2ICYmIGxlbiA9PSAxOCl7XG4gICAgICAgICAgICBpZighKGxlbl8xOCgpICYmIGxlbl8xOF9iaXJ0aGRheSgpKSl7XG4gICAgICAgICAgICAgICAgcmV2ID0gIGZhbHNlO1xuICAgICAgICAgICAgICAgIG1zZyA9IGVycl9tc2c7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmV2ID0gIGZhbHNlO1xuICAgICAgICAgICAgbXNnID0gZXJyX21zZztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm57XG4gICAgICAgICAgICBSRVY6IHJldixcbiAgICAgICAgICAgIE1TRzogbXNnXG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIF93aW4ueWlfcHVibGljID0gX3dpbi55aV9wdWJsaWMgfHwge307XG4gICAgX3dpbi55aV9wdWJsaWMuZm9ybV9jaGVjayA9IGZvcm1fY2hlY2s7XG4gICAgcmV0dXJuIGZvcm1fY2hlY2s7XG59KTsiXSwic291cmNlUm9vdCI6IiJ9