!function(t){var e={};function r(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(n,s,function(e){return t[e]}.bind(null,s));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){var n,s,i;!function(r,a){let o=a(r);e&&"string"!=typeof e.nodeName?t.exports=o:(s=[e],void 0===(i="function"==typeof(n=o)?n.apply(e,s):n)||(t.exports=i)),r.form_check=o}(this,(function(t,e){"use strict";let r=window,n=document,s=t=>{if("string"==typeof t&&(t=n.querySelector(t)),t&&t.tagName)return t;console.error("form_check:请检查你传入的元素是否正确。")},i={},a={},o=(t,e)=>{a[t]?console.error(t+"校验的名字已用过，请重新取一个名，已有的可在“yi_public.form_check._check_list”中查到"):a[t]=e},l={notice:t=>{t.tips=t.tips&&s(t.tips),t.tips||console.error("yi_public.form_check.notice里参数tips请传入dom对像 || #ID || div || .className"),t.tips.classList.remove("error_tips"),t.tips.classList.remove("warn_tips"),t.rev?t.tips.innerHTML="":(t.tips.innerHTML=t.msg||"","focus"===t.type?t.tips.classList.add("warn_tips"):t.tips.classList.add("error_tips"))},content:t=>{if(t.target=s(t.target),t.tips=t.tips&&s(t.tips),t.tips||(t.tips=n.createElement("span"),((t,e)=>{let r=e.parentNode;r.lastChild==e?r.appendChild(t):r.insertBefore(t,e.nextSibling)})(t.tips,t.target)),t.tips.classList.add("input_tips"),t.target.__form_check__content)return void console.error("此元素不能绑两次校验",t.target);t.target.__form_check__content=!0;let e=null,r=()=>{t.result&&clearInterval(e);let r=t.target.value||"",n=a[t.check]({val:r,check:a});return l.notice({target:t.target,tips:t.tips,msg:n.MSG,rev:n.REV}),n.REV},o=t.form_name||"0";return i[o]=i[o]||[],i[o].push({_fn:r,_obj:t}),t.target.addEventListener("blur",r,!1),t.target.addEventListener("focus",()=>{t.result&&(clearInterval(e),e=setInterval(()=>{let e=t.target.value||"",r=a[t.check]({val:e,check:a});r.target=t.target,r.tips=t.tips,t.result(r)},600)),l.notice({target:t.target,tips:t.tips,msg:t.entry,rev:!t.entry,type:"focus"})},!1),{target:t.target,tips:t.tips}},check:t=>{t.tips=t.tips&&s(t.tips);let e=a[t.check]({val:t.val,check:a});return t.tips&&l.notice({tips:t.tips,msg:e.MSG,rev:e.REV}),e.REV},must:t=>{let e,r=!0,n=!0,s=i[t||"0"]||[];for(let t=0;t<s.length;t++){let i=s[t]._fn();s[t]._obj.required&&(e=!0,i||(n=i)),i||(r=i)}return e?n:r},set_check:o,_check_list:a};return o("is_empty",t=>{let e=t.val,r="",n=!0;return""!=e&&null!=e||(n=!1,r="不能为空"),{REV:n,MSG:r}}),o("is_email",t=>{let e=t.val,r=t.check.is_empty(t),n=r.REV,s=r.MSG;return n&&!/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(e)&&(n=!1,s="请输入正确的邮箱"),{REV:n,MSG:s}}),o("phone",t=>{let e=t.val.replace(/(^\s*)|(\s*$)/g,""),r=t.check.is_empty(t),n=r.REV,s=r.MSG;return n&&!/^(1)[3|4|5|6|7|8|9]\d{9}$/.test(e)&&(n=!1,s="请输入正确的手机号"),{REV:n,MSG:s}}),o("real_name",t=>{let e=t.val,r=t.check.is_empty(t),n=r.REV,s=r.MSG;return n&&!/^\s*[\u4e00-\u9fa5]{1,}[\u4e00-\u9fa5.?]{0,15}[\u4e00-\u9fa5]{1,}\s*$/.test(e)||e.length>20?(n=!1,s="请输入正确真实姓名"):e.indexOf(" ")>-1&&(n=!1,s="不能有空格"),{REV:n,MSG:s}}),o("address",t=>{let e,r=t.val,n=t.check.is_empty(t),s=n.REV,i=n.MSG;return s&&/[^\a-\z\A-\Z0-9\u4E00-\u9FA5\ ]/g.test(r)&&(e=r.match(/[^\a-\z\A-\Z0-9\u4E00-\u9FA5\ ]/g)||[],s=!1,i="不得含有("+e.join(" ")+")"),{REV:s,MSG:i}}),o("id_card",t=>{let e=t.val,r=e.length,n=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2,1],s=[1,0,10,9,8,7,6,5,4,3,2],i=0,a=t.check.is_empty(t),o=a.REV,l=a.MSG;var c,u,p,f;return o&&(o&&15==r?(c=e.substring(6,8),u=e.substring(8,10),p=e.substring(10,12),((f=new Date(c,parseFloat(u)-1,parseFloat(p))).getYear()!=parseFloat(c)||f.getMonth()!=parseFloat(u)-1||f.getDate()!=parseFloat(p))&&(o=!1,l="请输入正确身份证号码")):o&&18==r&&function(){var e=0,r=t.val.split("");"x"==r[17].toLowerCase()&&(r[17]=10);for(var a=0;a<17;a++)e+=n[a]*r[a];return i=e%11,r[17]==s[i]}()&&function(){var t=e.substring(6,10),r=e.substring(10,12),n=e.substring(12,14),s=new Date(t,parseFloat(r)-1,parseFloat(n));return s.getFullYear()==parseFloat(t)&&s.getMonth()==parseFloat(r)-1&&s.getDate()==parseFloat(n)}()||(o=!1,l="请输入正确身份证号码")),{REV:o,MSG:l}}),r.yi_public=r.yi_public||{},r.yi_public.form_check=l,l}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,